---
- name: Run RHEL/Centos tasks
  become: true
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
  block:
    - name: Install Primary KDC Packages
      ansible.builtin.yum:
        name: '{{ common_kdc_yum }}'
        lock_timeout: 180
        state: present
    - name: Copy kdc.conf
      ansible.builtin.template:
        src: '{{ kdc_conf }}'
        dest: "/var/kerberos/krb5kdc/kdc.conf"
        mode: '0600'

- name: Run Debian/Ubuntu tasks
  become: true
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  tags: [kdc-init]
  block:
    - name: Install Primary KDC Packages
      ansible.builtin.apt:
        name: '{{ common_kdc_apt }}'
        state: present
    - name: Create /var/kerberos for Ubuntu
      ansible.builtin.file:
        path: '{{ krb5_path }}'
        owner: 'root'
        group: 'root'
        mode: '0755'
        state: directory
    - name: Create include dir for Ubuntu
      ansible.builtin.file:
        path: '/etc/krb5.conf.d'
        owner: 'root'
        group: 'root'
        mode: '0755'
        state: directory
    - name: Copy kdc.conf (Ubuntu)
      ansible.builtin.template:
        src: '{{ kdc_conf }}'
        dest: "/etc/krb5kdc/kdc.conf"
        mode: '0600'
    - name: Set krb5-admin-server.service
      ansible.builtin.replace:
        path: '/lib/systemd/system/krb5-admin-server.service'
        regexp: '/var/lib/krb5kdc'
        replace: '/var/kerberos/krb5kdc'
    - name: Set kdc service kerberos path
      ansible.builtin.replace:
        path: '/lib/systemd/system/krb5-kdc.service'
        regexp: '/var/lib/krb5kdc'
        replace: '/var/kerberos/krb5kdc'
    - name: Set kprop service kerberos path
      ansible.builtin.replace:
        path: '/lib/systemd/system/krb5-kpropd.service'
        regexp: '/var/lib/krb5kdc'
        replace: '/var/kerberos/krb5kdc'

- name: Copy kadm5.acl
  become: true
  ansible.builtin.template:
    src: '{{ kadm5_acl }}'
    dest: "/var/kerberos/krb5kdc/kadm5.acl"
    mode: '0600'

- name: SSH PermitRootLogin prohibit-password
  become: true
  ansible.builtin.lineinfile:
    dest: '/etc/ssh/sshd_config'
    regexp: '^PermitRootLogin'
    line: 'PermitRootLogin prohibit-password'
    state: present
    backup: true
  notify: Restart_sshd
